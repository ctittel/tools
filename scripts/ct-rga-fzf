#!/usr/bin/python3
import os
import sys


def print_file_matches(query: list, file: str):
    if query:
        regex_args = " ".join([f' -e {q} ' for q in query])
    else:
        regex_args = " -e .* "

    file = f'"{file}"'
    cmd = f"rga --multiline --multiline-dotall --pretty --context 5 {regex_args} {file}"
    os.system(cmd)


def file_search(query: list):
    files = []
    for x in query:
        search_files = " ".join([f'"{f}"' for f in files])
        out = os.popen(
            f"rga --multiline --multiline-dotall --files-with-matches {x} {search_files}").read()
        files = [f for f in out.split("\n") if f]
    for f in files:
        print(f)


def main(initial_query: str):
    v = f'export FZF_DEFAULT_COMMAND="{__file__} --search {initial_query}" && '
    v += f'export THIS_SCRIPT={__file__} && '
    cmd = v + '''
        fzf --sort --preview="[[ ! -z {} ]] && $THIS_SCRIPT --print {q} {}"
            --bind "change:reload:$THIS_SCRIPT --search {q}"
            --phony
            --preview-window="70%:wrap"
    '''
    cmd += f' -q "{initial_query}"'
    cmd = cmd.replace("\n", " ")
    file = os.popen(cmd).read()
    print(file)


if __name__ == "__main__":
    cmd = sys.argv[1]
    if cmd == "--search":
        file_search(sys.argv[2].split())
    elif cmd == "--print":
        query = sys.argv[2].split()
        print_file_matches(query, sys.argv[-1])
    else:
        initial_query = " ".join(sys.argv[1:])
        main(initial_query)
    exit(None)
